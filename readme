random_walker.c
Random walk across a n x n array, where n is defined by #define.
Assume the numbers 0, 1, 2, and 3, randomly generated corresponds to the direction up, right, down, and left, respectively.
When the cell x is selected by the new direction and it is already occupied, 
it first tries to jump over cell x to find if the neighboring cell (say cell y ) of x along the selected direction is not occupied, 
the next letter should be placed in cell y.

fibonocci.c
Write a recursive function int Fibonocci(void) that does not have any parameter but use a global variable n to compute.

fibonacci2.c
Enter a number to get its value in Fibonacci sequence.

max.c
Take any number of input values by command line and output the maximum. 
For example, run "max 1 2 3 4" will output 4 and run "max 3 2 1 4 5 8 9" will output 9.

c to f.c
Celsius to Fahrenheit conversion (°C to °F)

Dijkstra.c
Dijkstra algorithm

n!.c
Enter a number to get factorial.

quicksort.c
Quicksort algorithm

str reverse.c
Reverse the input string. If the input is "end", the program will end.

str reverse2.c
Reverse the input string. If the input is "end", the program will end.

random tour.c
Walk randomly in a 10*10 two-dimensional array.

(a^m)%n.c
(a^m)%n
